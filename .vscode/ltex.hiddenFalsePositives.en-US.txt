{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QIntroducing \"Radius Rumble\"\nFor this series, we'll develop Radius Rumble, a Godot-4-and-Golang-powered clone of the popular game agar.io.\\E$"}
{"rule":"A_INSTALL","sentence":"^\\QIf you see an error saying \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q is not installed, you can simply press the Install button that appears in the error message.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAs for the messages we have defined to start with, we have a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for sending chat messages, a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for when the server denies a request, and an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for when the server sends a client its ID.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAs for the messages we have defined to start with, we have a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for sending chat messages, and an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for when the server sends a client its ID.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe only import we need is \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for the mutex, and we will make it part of an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q package.\\E$"}
{"rule":"SAVE_SAFE","sentence":"^\\QThe reason for this is simple: I never found a reason to need an accurate number of objects in a shared collection at any point, so I figured we may as well save the performance hit of locking the map.\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QSo let's go ahead and register our new script as an autoload.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q line is similar, but this time it is an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q query that will insert a new row into the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q table.\\E$"}
{"rule":"ID_CASING","sentence":"^\\QThis piece of SQL code will create a table in our database called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which will have this structure: | Column Name | Data Type | Description | | --- | --- | --- | | id | int | A unique identifier for the user | | username | string | The username of the user | | password_hash | string | An obfuscated version of the user's password |\\E$"}
{"rule":"BEEN_PART_AGREEMENT","sentence":"^\\QWhat we can do now, however, is create our database and start interacting with it by calling the supplied functions in the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q package.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QWe will do all that in our \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q state, and upon successful login or registration, we can transfer them to an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q state, which we will create in the next post.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAdd the following nodes underneath the root \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node:\nCanvasLayer - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nVBoxContainer\nLineEdit - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLineEdit - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nHBoxContainer\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with the text \"Login\"\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with the text \"Register\"\nLog (log.gd)\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q variable is a callback function for when the server sends an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"LOT_OF","sentence":"^\\QThere is quite a lot happening here, so let's break it down:\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QWe also added a small delay between each spore to avoid flooding the send channel and causing packets to be dropped.\\E$"}
{"rule":"THE_NN_AND_THE_NN","sentence":"^\\QNow we don't want to be too strict about this, because the synchronization between the server and the client isn't ever going to be perfect, and we don't want to punish the player for that.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"protoc-usage\" text=\"Now we're free to go ahead and compile our .proto file.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q{% include highlight.html anchor=\"protoc-usage\" text=\"Now we're free to go ahead and compile our .proto file.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"protoc-usage\" text=\"Now we're free to go ahead and compile our .proto file.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"godobuf-usage\" text=\"You should see a new Godobuf tab appear in the bottom left panel, underneath the scene tree, adjacent to the FileSystem tab.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThis is where we can input our .proto file and generate our code.\"\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThis is where we can input our .proto file and generate our code.\"\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qid int A unique identifier for the user\nusername string The username of the user\npassword_hash string An obfuscated version of the user's password\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"get-rid-of-chat-handling\" text=\"Now, let's just get rid of the chat handling logic we set up in the HandleMessage method.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe root node of this scene should be an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scene should look like this:\nNode - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nNode2D - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nCanvasLayer - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLineEdit\nLog (log.gd)\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QWe'll need to modify the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q function to initialize the spores collection:\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QNow we are converting the shared spores collection into a series of batches, each containing 20 spores.\\E$"}
{"rule":"CURRENCY","sentence":"^\\QIn the diagram, it is clear that the distance between the two circles is \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q$, a.k.a.\\E$"}
{"rule":"CURRENCY","sentence":"^\\QTo find the player's new radius, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QM_1 := \\pi R_1^2\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QR_1$$:\\E$"}
{"rule":"CURRENCY","sentence":"^\\QSo, we'll need a method to calculate \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q$ and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QR_1$$, call it \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThis is a cool feature of Godot that means the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q property will automatically update the collision shape and redraw the actor whenever it appears on the left-hand-side of an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q sign.\\E$"}
{"rule":"THANK_FULL","sentence":"^\\QTo do this, simply use Full Rect anchor preset at the top of the scene editor when you have the root node selected.\\E$"}
{"rule":"EN_COMPOUNDS","sentence":"^\\QSo that ticks off stage 3 of our plan.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QGoogle Cloud Run is a managed compute platform that enables you to run stateless containers that are invocable via HTTP requests (in our case, these will translate to websocket requests).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QMarginContainer\nVBoxContainer\nHBoxContainer\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLineEdit\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nHiscores (instanced hiscores.tscn)\nLog (log.gd)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QNode - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nSprite2D - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nCanvasLayer - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nMarginContainer\nVBoxContainer\nRichTextLabel\nLineEdit - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLineEdit - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nHBoxContainer\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nButton - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLog (log.gd) - called \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"AFFORD_VB","sentence":"^\\QRight-click on the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q folder and choose Create New > Resource... then choose Theme.\\E$"}
{"rule":"AFFORD_VB","sentence":"^\\QDetach the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q script from the root \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node (right-click on the root node and choose Detach Script).\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAnnoyingly, we need to cast the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q here, because \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q just assumes everything to be inserted into an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q field is 64-bit.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\Q(another annoying cast because the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q came from the database as an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q).\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QCreate a bucket Bucket settings\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QTo do this, you will need to install Certbot, as well as the acme-dns-certbot tool to connect Certbot to a third-party DNS server where the certificate validation records can be set automatically via an API.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QFollow these instructions on snapcraft's site to install snapd.\\E$"}
{"rule":"A_INSTALL","sentence":"^\\QSwitch back to the Export Template Manager in Godot and click the Install from file button, and navigate to and select the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q file you just downloaded.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QOnce the export is complete, you should have a folder with an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q file in it.\\E$"}
{"rule":"DT_DT","sentence":"^\\QOnce the zip file is finished uploading, make sure to check the This file will be played in the browser checkbox.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QRearranging the simple formula \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\\text{time} = \\frac{\\text{distance}}{\\text{speed}}$$.\\E$"}
{"rule":"ENTER_IN","sentence":"^\\QThis code will send the search query to the server when the search button is pressed, or when the user presses Enter in the line edit.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QHiscores scene full rect\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qid int A unique identifier for the player\nname string The name of the player\nbest_score int The player's best score of all time\nuser_id int A reference to the user who owns this player\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"clientstatehandler-definition\" text=\"With that in mind, let's add a new interface to our hub.go file:\" %}\\E$"}
{"rule":"LC_AFTER_PERIOD","sentence":"^\\Q{% include highlight.html anchor=\"clientstatehandler-definition\" text=\"With that in mind, let's add a new interface to our hub.go file:\" %}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q{% include highlight.html anchor=\"saving-db-params\" text=\"It's going to get a bit cumbersome to always have to write c.queries and c.dbCtx every time we want to run a query, so let's quickly shorten their names by adding the following fields to the Connected struct:\" %}\\E$"}
